require('dotenv').config();
const express = require('express');
const session = require('express-session');
const path = require('path');

// –ò–º–ø–æ—Ä—Ç –Ω–∞ —Ä–æ—É—Ç–æ–≤–µ
const authRoutes = require('./routes/authRoutes');
const questionRoutes = require('./routes/questionRoutes');
// (–∞–∫–æ –∏–º–∞—à –∏ –¥—Ä—É–≥–∏: testRoutes –∏ —Ç.–Ω.)

const app = express();

// –ü–∞—Ä—Å–≤–∞–Ω–µ –Ω–∞ JSON –∏ URLENCODED –¥–∞–Ω–Ω–∏ –æ—Ç —Ñ–æ—Ä–º–∏—Ç–µ
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–µ—Å–∏–∏—Ç–µ
app.use(session({
  secret: 'my_super_secret_key', // —Å–º–µ–Ω–∏ —Å —Ä–µ–∞–ª–Ω–∞ —Ç–∞–π–Ω–∞
  resave: false,
  saveUninitialized: false,
  cookie: {
    //maxAge: 1000 * 60 // –ø—Ä–∏–º–µ—Ä: 1 minute
  }
}));

// –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∑–∞ —Å—Ç–∞—Ç–∏—á–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ (HTML, CSS, JS)
app.use(express.static(path.join(__dirname, 'public')));

// –†–æ—É—Ç–æ–≤–µ –∑–∞ –∞–≤—Ç–µ–Ω—Ç–∏–∫–∞—Ü–∏—è (login, register, logout)
app.use('/auth', authRoutes);

// –†–æ—É—Ç–æ–≤–µ –∑–∞ –≤—ä–ø—Ä–æ—Å–∏
app.use('/questions', questionRoutes);

app.use('/uploads', express.static(path.join(__dirname, 'public/uploads')));

app.use('/uploads', express.static('uploads'));

// –ü—Ä–∏–º–µ—Ä–µ–Ω –º–∞—Ä—à—Ä—É—Ç –∑–∞ –ø—Ä–æ—Ñ–∏–ª (—Å–∞–º–æ –∞–∫–æ —Å–∏ –ª–æ–≥–Ω–∞—Ç)
app.get('/profile', (req, res) => {
  if (!req.session.user) {
    return res.redirect('/login.html');
  }
  res.send(`
    <h1>–ó–¥—Ä–∞–≤–µ–π, ${req.session.user.username}!</h1>
    <p>–¢–∏ —Å–∏ –≤ —Ä–æ–ª—è—Ç–∞: ${req.session.user.role}</p>
    <a href="/auth/logout">–ò–∑—Ö–æ–¥</a>
  `);
});

app.get('/auth/status', (req, res) => {
  if (!req.session.user) {
    return res.json({ loggedIn: false });
  }
  res.json({
    loggedIn: true,
    user: {
      id: req.session.user.id,
      username: req.session.user.username,
      role: req.session.user.role,
      avatar: req.session.user.avatar || null   // üü¢ –¥–æ–±–∞–≤–∏ avatar
    }
  });
});



// –°—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ —Å—ä—Ä–≤—ä—Ä–∞(—Ç—Ä—è–±–≤–∞ –¥–∞ –µ –Ω–∞–π-–æ—Ç–¥–æ–ª—É)
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});




